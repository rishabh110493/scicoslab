// Coselica Toolbox for Scicoslab
// Copyright (C) 2009, 2010  Dirk Reusch, Kybernetik Dr. Reusch
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

function [x,y,typ]=MEAS_PMOS(job,arg1,arg2)
x=[];y=[];typ=[];
select job
  case 'plot' then
    W=arg1.graphics.exprs(1);
    L=arg1.graphics.exprs(2);
    Beta=arg1.graphics.exprs(3);
    Vt=arg1.graphics.exprs(4);
    K2=arg1.graphics.exprs(5);
    K5=arg1.graphics.exprs(6);
    dW=arg1.graphics.exprs(7);
    dL=arg1.graphics.exprs(8);
    RDS=arg1.graphics.exprs(9);
    standard_draw(arg1,%f,_MEAS_NMOS_dp);
  case 'getinputs' then
    [x,y,typ]=_MEAS_NMOS_ip(arg1);
  case 'getoutputs' then
    [x,y,typ]=_MEAS_NMOS_op(arg1);
  case 'getorigin' then
    [x,y]=standard_origin(arg1);
  case 'set' then
    x=arg1;
    graphics=arg1.graphics;exprs=graphics.exprs;
    model=arg1.model;
    while %t do
      [ok,W,L,Beta,Vt,K2,K5,dW,dL,RDS,exprs]=...
        getvalue(['';'MEAS_PMOS';'';'Simple MOS Transistor';''],...
        [' W [m] : Width',' L [m] : Length',' Beta [A/(V*V)] : Transconductance parameter',' Vt [V] : Zero bias threshold voltage',' K2 [-] : Bulk threshold parameter',' K5 [-] : Reduction of pinch-off region',' dW [m] : Narrowing of channel',' dL [m] : Shortening of channel',' RDS [Ohm] : Drain-Source-Resistance'],...
        list('vec',1,'vec',1,'vec',1,'vec',1,'vec',1,'vec',1,'vec',1,'vec',1,'vec',1),exprs);
      if ~ok then break, end
      model.equations.parameters(2)=list(W,L,Beta,Vt,K2,K5,dW,dL,RDS)
      graphics.exprs=exprs;
      x.graphics=graphics;x.model=model;
      break
    end
  case 'define' then
    model=scicos_model();
    W=0.00002;
    L=0.000006;
    Beta=0.0000105;
    Vt=-1;
    K2=0.41;
    K5=0.839;
    dW=-0.0000025;
    dL=-0.0000021;
    RDS=10000000;
    model.sim='Coselica';
    model.blocktype='c';
    model.dep_ut=[%t %f];
    mo=modelica();
      mo.model='Modelica.Electrical.Analog.Semiconductors.PMOS';
      mo.inputs=['G'];
      mo.outputs=['D','B','S'];
      mo.parameters=list(['W','L','Beta','Vt','K2','K5','dW','dL','RDS'],...
                         list(W,L,Beta,Vt,K2,K5,dW,dL,RDS),...
                         [0,0,0,0,0,0,0,0,0]);
    model.equations=mo;
    model.in=ones(size(mo.inputs,'*'),1);
    model.out=ones(size(mo.outputs,'*'),1);
    exprs=[sci2exp(W);sci2exp(L);sci2exp(Beta);sci2exp(Vt);sci2exp(K2);sci2exp(K5);sci2exp(dW);sci2exp(dL);sci2exp(RDS)];
    gr_i=[...
          'if orient then';...
          '  xx=orig(1);yy=orig(2);';...
          '  ww=sz(1);hh=sz(2);';...
          'else';...
          '  xx=orig(1)+sz(1);yy=orig(2);';...
          '  ww=-sz(1);hh=sz(2);';...
          'end';...
          'if orient then';...
          '  xstringb(orig(1)+sz(1)*0,orig(2)+sz(2)*0.8,""""+model.label+"""",sz(1)*1,sz(2)*0.2,""fill"");';...
          'else';...
          '  xstringb(orig(1)+sz(1)*(1-0-1),orig(2)+sz(2)*0.8,""""+model.label+"""",sz(1)*1,sz(2)*0.2,""fill"");';...
          'end';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,0);';...
          'e.background=color(0,0,255);';...
          'e.font_foreground=color(0,0,255);';...
          'e.fill_mode=""off"";';...
          'xpoly(xx+ww*[0.05;0.45],yy+hh*[0.25;0.25]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.45;0.45],yy+hh*[0.25;0.75]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.55],yy+hh*[0.85;0.645]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.55],yy+hh*[0.6;0.395]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.55],yy+hh*[0.35;0.145]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.955],yy+hh*[0.75;0.75]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.95],yy+hh*[0.5;0.5]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.55;0.95],yy+hh*[0.25;0.25]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.8;0.7;0.7;0.8],yy+hh*[0.5;0.525;0.475;0.5]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.background=color(0,0,255);';...
          'e.fill_mode=""on"";';...
          'e.thickness=0.25;';...
          'e.line_style=1;';...
         ];

    x=standard_define([2 2],model,exprs,list(gr_i,0));
    x.graphics.in_implicit=['I'];
    x.graphics.out_implicit=['I','I','I'];
  end
endfunction
