// Coselica Toolbox for Scicoslab
// Copyright (C) 2009, 2010  Dirk Reusch, Kybernetik Dr. Reusch
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

function [x,y,typ]=MTH_ThermalConductor(job,arg1,arg2)
x=[];y=[];typ=[];
select job
  case 'plot' then
    G=arg1.graphics.exprs(1);
    standard_draw(arg1,%f,_MTH_ThermalConductor_dp);
  case 'getinputs' then
    [x,y,typ]=_MTH_ThermalConductor_ip(arg1);
  case 'getoutputs' then
    [x,y,typ]=_MTH_ThermalConductor_op(arg1);
  case 'getorigin' then
    [x,y]=standard_origin(arg1);
  case 'set' then
    x=arg1;
    graphics=arg1.graphics;exprs=graphics.exprs;
    model=arg1.model;
    while %t do
      [ok,G,exprs]=...
        getvalue(['';'MTH_ThermalConductor';'';'Lumped thermal element transporting heat without storing it';''],...
        [' G [W/K] : Constant thermal conductance of material'],...
        list('vec',1),exprs);
      if ~ok then break, end
      model.equations.parameters(2)=list(G)
      graphics.exprs=exprs;
      x.graphics=graphics;x.model=model;
      break
    end
  case 'define' then
    model=scicos_model();
    G=1;
    model.sim='Coselica';
    model.blocktype='c';
    model.dep_ut=[%t %f];
    mo=modelica();
      mo.model='Modelica.Thermal.HeatTransfer.ThermalConductor';
      mo.inputs=['port_a'];
      mo.outputs=['port_b'];
      mo.parameters=list(['G'],...
                         list(G),...
                         [0]);
    model.equations=mo;
    model.in=ones(size(mo.inputs,'*'),1);
    model.out=ones(size(mo.outputs,'*'),1);
    exprs=[sci2exp(G)];
    gr_i=[...
          'if orient then';...
          '  xx=orig(1);yy=orig(2);';...
          '  ww=sz(1);hh=sz(2);';...
          'else';...
          '  xx=orig(1)+sz(1);yy=orig(2);';...
          '  ww=-sz(1);hh=sz(2);';...
          'end';...
          'if orient then';...
          '  xrect(orig(1)+sz(1)*0.05,orig(2)+sz(2)*0.85,sz(1)*0.9,sz(2)*0.7);';...
          'else';...
          '  xrect(orig(1)+sz(1)*(1-0.05-0.9),orig(2)+sz(2)*0.85,sz(1)*0.9,sz(2)*0.7);';...
          'end';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,0);';...
          'e.background=color(192,192,192);';...
          'e.fill_mode=""on"";';...
          'e.thickness=0.25;';...
          'e.line_style=0;';...
          'xpoly(xx+ww*[0.05;0.05],yy+hh*[0.85;0.15]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,0);';...
          'e.thickness=0.5;';...
          'e.line_style=1;';...
          'xpoly(xx+ww*[0.95;0.95],yy+hh*[0.85;0.15]);';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,0);';...
          'e.thickness=0.5;';...
          'e.line_style=1;';...
          'if orient then';...
          '  xstringb(orig(1)+sz(1)*-0.195,orig(2)+sz(2)*0.87,""""+model.label+"""",sz(1)*1.4,sz(2)*0.3,""fill"");';...
          'else';...
          '  xstringb(orig(1)+sz(1)*(1--0.195-1.4),orig(2)+sz(2)*0.87,""""+model.label+"""",sz(1)*1.4,sz(2)*0.3,""fill"");';...
          'end';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.background=color(0,0,255);';...
          'e.font_foreground=color(0,0,255);';...
          'e.fill_mode=""on"";';...
          'if orient then';...
          '  xstringb(orig(1)+sz(1)*-0.075,orig(2)+sz(2)*-0.08,""G=""+string(G)+"""",sz(1)*1.14,sz(2)*0.2,""fill"");';...
          'else';...
          '  xstringb(orig(1)+sz(1)*(1--0.075-1.14),orig(2)+sz(2)*-0.08,""G=""+string(G)+"""",sz(1)*1.14,sz(2)*0.2,""fill"");';...
          'end';...
          'e=gce();';...
          'e.visible=""on"";';...
          'e.foreground=color(0,0,255);';...
          'e.background=color(0,0,0);';...
          'e.font_foreground=color(0,0,0);';...
          'e.fill_mode=""off"";';...
         ];

    x=standard_define([2 2],model,exprs,list(gr_i,0));
    x.graphics.in_implicit=['I'];
    x.graphics.out_implicit=['I'];
  end
endfunction
