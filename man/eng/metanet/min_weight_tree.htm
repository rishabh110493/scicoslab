<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>min_weight_tree</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab function</center>
<div align="right">Last update : 29/02/2016</div>
<p><b>min_weight_tree</b> -  minimum weight spanning tree</p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>t = min_weight_tree([i],g)  </tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>i</b></tt>: integer, node number of the root of the tree</li>
<li>
<tt><b>g</b></tt>: graph list</li>
<li>
<tt><b>t</b></tt>: row vector of integer numbers of the arcs of the tree if it exists</li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt><b>min_weight_tree</b></tt> tries to find a minimum weight spanning tree for the
    graph <tt><b>g</b></tt>. The optional argument <tt><b>i</b></tt> is the number of the root node of
    the tree; its default value is node number 1. This node is meaningless
    for an undirected graph.</p>
<p>
    The weights are given by the element <tt><b>edge_weight</b></tt> of the graph list. 
    If its value is not given (empty vector <tt><b>[]</b></tt>), it is assumed to be 
    equal to 0 on each edge.
    Weigths can be positive, equal to 0 or negative. To compute a spanning
    tree without dealing with weights, give to weights a value of 0 on each 
    edge or the empty vector <tt><b>[]</b></tt>.</p>
<p><tt><b>min_weight_tree</b></tt> returns the tree <tt><b>t</b></tt> as a row vector of the
    arc numbers (directed graph) or edge numbers (undirected graph)
    if it exists or the empty vector <tt><b>[]</b></tt> otherwise. 
    If the tree exists, the dimension of <tt><b>t</b></tt> is the number of nodes less 1.
    If <tt><b>t(i)</b></tt> is the root of the tree:
      - for j &lt; i, <tt><b>t(j)</b></tt> is the number of the arc in the tree after
          node <tt><b>t(j)</b></tt>
      - for j &gt; i, <tt><b>t(j)</b></tt> is the number of the arc in the tree before 
          node <tt><b>t(j)</b></tt></p>
<h3><font color="blue">Examples</font></h3>
<pre>

ta=[1 1 2 2 2 3 4 5 5 7 8 8 9 10 10 10 11 12 13 13 13 14 15 16 16 17 17];
he=[2 10 3 5 7 4 2 4 6 8 6 9 7 7 11 15 12 13 9 10 14 11 16 1 17 14 15];
g=make_graph('foo',1,17,ta,he);
g('node_x')=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642];
g('node_y')=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301];
show_graph(g);
t=min_weight_tree(1,g); 
g1=g; ma=arc_number(g1); n=g1('node_number');
nodetype=0*ones(1,n); nodetype(1)=2; g1('node_type')=nodetype;
edgecolor=1*ones(1,ma); edgecolor(t)=11*ones(t); g1('edge_color')=edgecolor;
edgewidth=1*ones(1,ma); edgewidth(t)=4*ones(t); g1('edge_width')=edgewidth;
x_message('Minimum weight tree from node 1');
show_graph(g1);
 
  </pre>
</body>
</html>
