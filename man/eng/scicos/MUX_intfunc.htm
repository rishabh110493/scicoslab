<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2008 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>MUX_intfunc</TITLE>
<META NAME="description" CONTENT="MUX_intfunc">
<META NAME="keywords" CONTENT="MUX_intfunc">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2008">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="MUX_intfunc.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Interfacing function
<BR><A NAME="tex2html1"
  HREF="./MUX_intfunc.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="MUX_intfunc"></A>
<BR>
MUX
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
File content</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">function [x,y,typ]=MUX(job,arg1,arg2)
// Copyright INRIA
x=[];y=[];typ=[];
select job
case 'plot' then
  standard_draw(arg1)
case 'getinputs' then
  [x,y,typ]=standard_inputs(arg1)
case 'getoutputs' then
  [x,y,typ]=standard_outputs(arg1)
case 'getorigin' then
  [x,y]=standard_origin(arg1)
case 'set' then
  x=arg1;
  graphics=arg1.graphics;exprs=graphics.exprs
  model=arg1.model;
  while %t do
    [ok,in,exprs]=getvalue('Set MUX block parameters',..
	'Number of input ports or vector of sizes',list('vec',-1),exprs)
    if ~ok then break,end
    if size(in,'*')==1 then
      if in&lt;2|in&gt;31 then
	message('Block must have at least two input ports and at most 31')
	ok=%f
      else
	[model,graphics,ok]=check_io(model,graphics,-[1:in]',0,[],[])
      end
    else
      if size(in,'*')&lt;2| or(in==0)|size(in,'*')&gt;31 then
	message(['Block must have at least two input ports';
		 'and at most 31. Size 0 is not allowed. '])
	ok=%f
      else
	if min(in)&lt;0 then nout=0,else nout=sum(in),end
	[model,graphics,ok]=check_io(model,graphics,in(:),nout,[],[])
	if ok then in=size(in,'*'),end
      end
    end
    if ok then
      graphics.exprs=exprs;model.ipar=in
      x.graphics=graphics;x.model=model
      break
    end
  end
 case 'define' then
  in=2
  model=scicos_model()
  model.sim=list('multiplex',4)
  model.in=-[1:in]'
  model.out=0
  model.ipar=in
  model.blocktype='c'
  model.dep_ut=[%t %f]

  exprs=string(in)
  gr_i=['txt=''Mux'';'
        'style=5;'
        'rectstr=stringbox(txt,orig(1),orig(2),0,style,1);'
        'if ~exists(''%zoom'') then %zoom=1, end;'
        'w=(rectstr(1,3)-rectstr(1,2))*%zoom;'
        'h=(rectstr(2,2)-rectstr(2,4))*%zoom;'
        'xstringb(orig(1)+sz(1)/2-w/2,orig(2)-h-4,txt,w,h,''fill'');'
        'e=gce();'
        'e.font_style=style;']
  x=standard_define([.5 2],model,exprs,gr_i)
end
endfunction
</PRE>

<BR>




</BODY>
</HTML>
