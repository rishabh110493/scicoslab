<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2008 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>constraint_c_routcos</TITLE>
<META NAME="description" CONTENT="constraint_c_routcos">
<META NAME="keywords" CONTENT="constraint_c_routcos">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2008">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="constraint_c_routcos.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Computational routine
<BR><A NAME="tex2html1"
  HREF="./constraint_c_routcos.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="constraint_c_routcos"></A>
<BR>
constraint_c
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
File content</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">#include "scicos_block4.h"

/*     February 2008 */
/*    Copyright INRIA
 *    Scicos block simulator
 */

void constraint_c(scicos_block *block,int flag)
{
  double *_xd=GetDerState(block);
  double *_x=GetState(block);
  double *_res=GetResState(block);
  int *_ipar=GetIparPtrs(block);
  double *y,*y2,*u;
  int i;
  int* property=GetXpropPtrs(block);
  int outsz0=GetOutPortRows(block,1);
    switch(flag)
      {
      case 4  : {
	for (i=0;i&lt;outsz0;i++) property[i]=-1; /* xproperties*/
 	break;
      }

      case 7  : {
	for (i=0;i&lt;outsz0;i++){
	  property[i] = _ipar[i];
	}
	break;
      }

      case 0  : {/* the workspace is used to store discrete counter value */
	u=GetRealInPortPtrs(block,1); 	
	for (i=0;i&lt;outsz0;i++) _res[i]=u[i];	
	break;
      }

      case 1  : { 
	y=GetRealOutPortPtrs(block,1);
	for (i=0;i&lt;outsz0;i++)  y[i]=_x[i];	

	if (GetNout(block)==2) {
	  y2=GetRealOutPortPtrs(block,2);
	  for (i=0;i&lt;outsz0;i++)  y2[i]=_xd[i];
	}
	break;	
      }

      default : break;
      }
}
</PRE>

<BR>




</BODY>
</HTML>
