<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2008 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>csslti4_routcos</TITLE>
<META NAME="description" CONTENT="csslti4_routcos">
<META NAME="keywords" CONTENT="csslti4_routcos">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2008">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="csslti4_routcos.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Computational routine
<BR><A NAME="tex2html1"
  HREF="./csslti4_routcos.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="csslti4_routcos"></A>
<BR>
csslti4
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
File content</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">#include "scicos_block4.h"
#include "../machine.h"

extern int C2F(dmmul)();
extern int C2F(dmmul1)();

void csslti4(scicos_block *block,int flag)
{
  
  /*  Copyright INRIA

      Scicos block simulator
      continuous state space linear system simulator
      rpar(1:nx*nx)=A
      rpar(nx*nx+1:nx*nx+nx*nu)=B
      rpar(nx*nx+nx*nu+1:nx*nx+nx*nu+nx*ny)=C
      rpar(nx*nx+nx*nu+nx*ny+1:nx*nx+nx*nu+nx*ny+ny*nu)=D */
  
  int un=1,lb,lc,ld;
  int nx=GetNstate(block);
  double* x=GetState(block);
  double* xd=GetDerState(block);
  double* rpar=GetRparPtrs(block);
  double* y=GetRealOutPortPtrs(block,1);
  double* u=GetRealInPortPtrs(block,1);
  int noutsz=GetOutPortRows(block,1);
  int ninsz=GetInPortRows(block,1);
  
  lb=nx*nx;
  lc=lb+nx*ninsz;
  
  if (flag ==1 || flag ==6){
    /* y=c*x+d*u     */
    ld=lc+nx*noutsz;
    if (nx==0) {
      C2F(dmmul)(&amp;rpar[ld],&amp;noutsz,u,&amp;ninsz,y,&amp;noutsz,&amp;noutsz,&amp;ninsz,&amp;un);
    }else{
      C2F(dmmul)(&amp;rpar[lc],&amp;noutsz,x,&amp;nx,y,&amp;noutsz,&amp;noutsz,&amp;nx,&amp;un);
      C2F(dmmul1)(&amp;rpar[ld],&amp;noutsz,u,&amp;ninsz,y,&amp;noutsz,&amp;noutsz,&amp;ninsz,&amp;un);
    }
  }

  else if (flag ==0){
    /* xd=a*x+b*u */
    C2F(dmmul)(&amp;rpar[0],&amp;nx,x,&amp;nx,xd,&amp;nx,&amp;nx,&amp;nx,&amp;un);
    C2F(dmmul1)(&amp;rpar[lb],&amp;nx,u,&amp;ninsz,xd,&amp;nx,&amp;nx,&amp;ninsz,&amp;un);
  }
}



</PRE>

<BR>




</BODY>
</HTML>
