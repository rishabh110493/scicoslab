<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>saturation_graph </title>
</head>
<body bgcolor="#FFFFFF">
<center>Maxplus Function  </center>
<div align="right">Last update : 29/02/2016</div>
<p><b>saturation_graph </b> -   saturation graph ( flowshop graph ) ( maxplus )  </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl>
<dd><tt>gh=Lsaturation_graph(g)  </tt></dd>
<dd><tt>gh=Rsaturation_graph(g)  </tt></dd>
</dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>g  </b></tt>
    :  flowshop graph built with flowshop_graph
  </li>
<li>
<tt><b>gh  </b></tt>
    : saturation graph of g
  </li>
</ul>
<h3><font color="blue">Description</font></h3>
<p>
    Computes the left (L) and right (R) saturation graph,  that
    is the arcs that saturate the left/right generalized eigenvector
    equality of a bivalued graph. The generalized eigenelements
    are  computed by semihoward.
  </p>
<p>
    The right saturation graph is  the
    graph where saturating predecessors of i are
    the nodes belonging to { j :  Aij Vj = Vi }, where Aij denotes
    the  weight associated to the edge from node j to node i. 
    The corresponding graph  is called G(A'), it uses the dynamical
    system orientation convention which is the opposite of
    the one used for Markov (called G(A)). 
  </p>
<p>
    The left saturation graph is the graph where the set of 
    the saturating successors of i is  { j : Vj Aji = Vi }.
  </p>
<p>
    In particular, they can be used to see the bottleneck of event-graphs.
    In this case  A is the matrix with entries T-Nxdiag(l)
    [resp. T-diag(l)xN] for the right [resp. left] saturation graph 
    where T denotes the processing times,
    N the initial marking and l are the generalized eigenvalues.
    For an irreducible event graph there exists a unique eigenvalue
    and l is a vector with constant entries equal to this eigen
    value.
  </p>
<p></p>
<p></p>
<p>
    - The graph must have a structure analogous to the
    one generated by flowshop_graph.
  </p>
<p>
    - Sometimes, it is useful to move the position of
    the nodes (with the metanet editor) to see the special
    structures of these saturation graphs.
  </p>
<h3><font color="blue">Examples</font></h3>
<pre>
PT=#([2,1;%0,1;4,%0]);
xsetech([0 0 0.5 0.5]);
[g,T,N]=flowshop_graph(PT,[1,1,1],[2,2],50);

// Right saturation graph
show_graph(Rsaturation_graph(g));
[l,v]=semihoward(T,N)
(#(full(T))-full(#(plustimes(N)*diag(plustimes(l)))))*v==v

// Left saturation graph
show_graph(Lsaturation_graph(g));
[l,v]=semihoward(T',N')
v'*(#(full(T))-full(#(diag(plustimes(l))*plustimes(N))))==v'
 </pre>
<h3><font color="blue">See Also</font></h3>
<p><a href="../../../../../../home/jpc/Download/scicoslab/man/eng/maxplus/maxplus.htm"><tt><b>maxplus</b></tt></a>,&nbsp;&nbsp;<a href="../../../../../../home/jpc/Download/scicoslab/man/eng/maxplus/flowshop_graph.htm"><tt><b>flowshop_graph</b></tt></a>,&nbsp;&nbsp;<a href="../../../../../../home/jpc/Download/scicoslab/man/eng/maxplus/flowshop.htm"><tt><b>flowshop</b></tt></a>,&nbsp;&nbsp;<a href="../../../../../../home/jpc/Download/scicoslab/man/eng/maxplus/show_cr_graph.htm"><tt><b>show_cr_graph</b></tt></a>,&nbsp;&nbsp;</p>
</body>
</html>
