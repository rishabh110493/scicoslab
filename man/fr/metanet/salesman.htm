<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>salesman</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab function  </center>
<div align="right">Last update : 29/02/2016</div>
<p><b>salesman</b> -  résout le problème du voyageur de commerce  </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>cir = salesman(g,[nstac])  </tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>g  </b></tt>
    : graphe (liste)
</li>
<li>
<tt><b>nstac  </b></tt>
    : entier
</li>
<li>
<tt><b>cir  </b></tt>
    : vecteur ligne d'entiers
</li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt><b>salesman</b></tt> résout le problème du voyageur de commerce. <tt><b>g</b></tt> est un graphe orienté; 
    <tt><b>nstac</b></tt> est un entier optionnel qui est une borne sur
    la mémoire allouée pour résoudre ce problème. Sa valeur est 100*n*n par 
    défaut où n est le nombre de sommets.
  </p>
<h3><font color="blue">Examples</font></h3>
<pre>
ta=[2  1 3 2 2 4 4 5 6 7 8 8 9 10 10 10 10 11 12 13 13 14 15 16 16 17 17];
he=[1 10 2 5 7 3 2 4 5 8 6 9 7 7 11 13 15 12 13  9 14 11 16 1 17 14 15];
g=make_graph('foo',0,17,ta,he);
g('node_x')=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642];
g('node_y')=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301];
g('node_diam')=[1:(g('node_number'))]+20;
show_graph(g);
g1=make_graph('foo1',1,17,[ta he],[he ta]);
m=arc_number(g1);
g1('edge_length')=5+round(30*rand(1,m));
cir = salesman(g1);
ii=find(cir &gt; edge_number(g)); 
if(ii &lt;&gt; []) then cir(ii)=cir(ii)-edge_number(g);end;
show_arcs(cir);
 </pre>
</body>
</html>
