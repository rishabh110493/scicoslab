<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>find_path</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab function  </center>
<div align="right">Last update : 29/02/2016</div>
<p><b>find_path</b> -  trouve un chemin entre deux sommets  </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>p = find_path(i,j,g)  </tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>i  </b></tt>
    : entier, numéro du sommet de départ
</li>
<li>
<tt><b>j  </b></tt>
    : entier, numéro su sommet d'arrivée
</li>
<li>
<tt><b>g  </b></tt>
    : graphe (liste)
</li>
<li>
<tt><b>p  </b></tt>
    : vecteur ligne des numéros des arcs du chemin s'il existe
</li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt><b>find_path</b></tt> renvoie un chemin <tt><b>p</b></tt> du sommet numéro <tt><b>i</b></tt> au 
    sommet numéro <tt><b>j</b></tt> s'il en existe un, et le vecteur vide <tt><b>[]</b></tt> sinon.
  </p>
<h3><font color="blue">Examples</font></h3>
<pre>
ta=[1 1 2 2 2 3 4 5 5 7 8 8 9 10 10 10 11 12 13 13 13 14 15 16 16 17 17];
he=[2 10 3 5 7 4 2 4 6 8 6 9 7 7 11 15 12 13 9 10 14 11 16 1 17 14 15];
g=make_graph('foo',1,17,ta,he);
g('node_x')=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642];
g('node_y')=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301];
show_graph(g);
p=find_path(1,14,g);
edgecolor=1*ones(ta); edgecolor(p)=11*ones(p); g('edge_color')=edgecolor;
show_graph(g); show_arcs(p);
 </pre>
<h3><font color="blue">See Also</font></h3>
<p><a href="../../../../../../home/jpc/Download/scicoslab/man/fr/metanet/nodes_2_path.htm"><tt><b>nodes_2_path</b></tt></a>,&nbsp;&nbsp;<a href="../../../../../../home/jpc/Download/scicoslab/man/fr/metanet/shortest_path.htm"><tt><b>shortest_path</b></tt></a>,&nbsp;&nbsp;</p>
</body>
</html>
