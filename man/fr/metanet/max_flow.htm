<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>max_flow</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab function  </center>
<div align="right">Last update : 29/02/2016</div>
<p><b>max_flow</b> -  flot maximum entre deux sommets  </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>[v,phi,flag] = max_flow(i,j,g)  </tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>i  </b></tt>
    : entier, numéro du sommet de départ
</li>
<li>
<tt><b>j  </b></tt>
    : entier,  numéro du sommet d'arrivée
</li>
<li>
<tt><b>g  </b></tt>
    : graphe (liste)
</li>
<li>
<tt><b>v  </b></tt>
    : valeur du flot maximum, si elle existe
</li>
<li>
<tt><b>phi  </b></tt>
    : vecteur ligne des valeurs des flots sur les arcs
</li>
<li>
<tt><b>flag  </b></tt>
    : problème soluble ou non (0 ou 1)
</li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt><b>max_flow</b></tt> renvoie la valeur du flot maximum <tt><b>v</b></tt> du sommet
    <tt><b>i</b></tt> au sommet <tt><b>j</b></tt> si elle existe, et la valeur des flots 
    sur chaque arc sous forme d'un vecteur ligne <tt><b>phi</b></tt>. Les calculs sont 
    faits en nombres entiers. Le graphe doit être orienté. Si le problème n'est 
    pas soluble, <tt><b>flag</b></tt> est égal à 0, sinon il est égal à 1.
  </p>
<p>
    Les bornes sur le flot sont données par les éléments <tt><b>edge_min_cap</b></tt> et
    <tt><b>edge_max_cap</b></tt> du graphe. 
    La valeur de la capacité maximum doit être supérieure ou égale à 
    la capacité minimum.
    Si la valeur de <tt><b>edge_min_cap</b></tt> ou <tt><b>edge_max_cap</b></tt> n'est pas donnée 
    (vecteur ligne vide <tt><b>[]</b></tt>), elle est supposée égale à 0 sur chaque arête.
  </p>
<h3><font color="blue">Examples</font></h3>
<pre>
ta=[1 1 2 2 3 3 4 4 5 5 5 5 6 6 6 7 7 15 15 15 15 15 15];
ta=[ta, 15 8 9 10 11 12 13 14];
he=[10 13 9 14 8 11 9 11 8 10 12 13 8 9 12 8 11 1 2 3 4];
he=[he, 5 6 7 16 16 16 16 16 16 16];
n=16;
g=make_graph('foo',1,n,ta,he);
g('node_x')=[42 615 231 505 145 312 403 233 506 34 400 312 142 614 260 257];
g('node_y')=[143 145 154 154 147 152 157 270 273 279 269 273 273 274 50 376];
ma=edge_number(g);
g('edge_max_cap')=ones(1,ma);
g('edge_min_cap')=zeros(1,ma);
source=15; sink=16;
nodetype=0*ones(1,n); nodetype(source)=2; nodetype(sink)=1;
g('node_type')=nodetype;
nodecolor=0*ones(1,n); nodecolor(source)=11; nodecolor(sink)=11;
g('node_color')=nodecolor;
show_graph(g);
[v,phi,ierr]=max_flow(source,sink,g);
ii=find(phi&lt;&gt;0); edgecolor=phi; edgecolor(ii)=11*ones(ii);
g('edge_color')=edgecolor;
edgefontsize=8*ones(1,ma); edgefontsize(ii)=18*ones(ii);
g('edge_font_size')=edgefontsize;
g('edge_label')=string(phi);
show_graph(g);
 </pre>
</body>
</html>
