<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>articul</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab function  </center>
<div align="right">Last update : 29/02/2016</div>
<p><b>articul</b> -  trouve un ou plusieurs points d'articulation  </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>nart = articul([i],g)  </tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>g  </b></tt>
    : graphe (liste) 
</li>
<li>
<tt><b>i  </b></tt>
    : entier 
</li>
<li>
<tt><b>nart  </b></tt>
    : vecteur ligne d'entiers
</li>
</ul>
<h3><font color="blue">Description</font></h3>
<p><tt><b>articul</b></tt> trouve un ou plusieurs points d'articulation (s'il existent) 
    du graphe <tt><b>g</b></tt>. <tt><b>nart</b></tt> est le vecteur ligne des numéros des sommets 
    d'articulation : détruire un de ces sommets augmente le nombre de 
    composantes connexes du graphe.
    <tt><b>i</b></tt> est le numéro optionnel de sommet à partir duquel l'algorithme 
    démarre. 
    La valeur par défaut est 1. Notez que le résultat dépend fortement du 
    choix de ce sommet.
  </p>
<h3><font color="blue">Examples</font></h3>
<pre>
ta=[2  1 3 2 2 4 4 5 6 7 8 8 9 10 10 10 10 11 12 13 14 15 16 17 17];
he=[1 10 2 5 7 3 2 4 5 8 6 9 7  7 11 13 15 12 13 14 11 16 17 14 15];
g=make_graph('foo',1,17,ta,he);
g('node_x')=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642];
g('node_y')=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301];
g('node_diam')=[1:(g('node_number'))]+20;
show_graph(g);
nart = articul(g)
show_nodes(nart);
 </pre>
</body>
</html>
