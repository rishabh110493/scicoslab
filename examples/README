You will find in this directory 

[1] A description of the interface library through examples in:

	interface-tour-so:
	interface-tour:

    The two previous directories differs in the way unix shared 
    library are created. 
    -In the intersci-examples-so, shared libaries are produced by a tool 
    called libtool (which is configured and instaled with Scilab). 
    and Scilab only load the shared libraries. 

    -In the intersci-examples, source files are compiled to object files
    and the list of object files is transmited to Scilab. Given the 
    object files Scilab builds the shared library. 

    Considering portability issues, we encourage people to use the 
    first method. 
    
    Note also that the presented examples should run out of the box 
    on Unix and on Windows (with VisualC++). 

[2] A small example extracted form [1] but covering the same features:
	
	interface-tutorial:
	interface-tutorial-so:

[3] A small example devoted to lapcak interfacing 

	interface-lapack:

[4] intersci can be used to generate interfaces presented in the 
    previous section:

	intersci-examples-so
	intersci-examples

    intersci is an interface generator: two versions coexists 
    an old one presented in intersci-examples and a new one 
    presented in intersci-examples-so. 
    The new one generate code compatible with examples 
    presented in sections [1][2][3]. 

[5] Matlab users are familiar with mex-files. 
    interfaces writen in the mex file philosophy are 
    presented in 

	mex-examples

[6] dynamic linking is presented in 

	link-examples 
	link-examples-so
	misc-examples 

[7] How to organize a macro library is presented in 

	macros-examples

[8] How to add your own manual sections is presented in 

	man-examples

[9] How to call scilab from an other program is explained in 
	
	callsci

[10] mixing interfaces mex functions and shared libraries 


Note: 

Some examples require a Fortran compiler. It may be necessary to
modify the file "../Makefile.incl" to set the good Fortran compiler in
variable FC.

